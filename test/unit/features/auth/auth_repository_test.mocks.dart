// Mocks generated by Mockito 5.4.5 from annotations
// in white_label_pos_mobile/test/unit/features/auth/auth_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:white_label_pos_mobile/src/features/auth/data/repositories/auth_repository.dart'
    as _i3;
import 'package:white_label_pos_mobile/src/features/auth/models/user.dart'
    as _i5;
import 'package:white_label_pos_mobile/src/shared/models/result.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResult_0<T> extends _i1.SmartFake implements _i2.Result<T> {
  _FakeResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i3.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<_i3.LoginResponse>> login(
    String? email,
    String? password,
    String? businessSlug,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            email,
            password,
            businessSlug,
          ],
        ),
        returnValue: _i4.Future<_i2.Result<_i3.LoginResponse>>.value(
            _FakeResult_0<_i3.LoginResponse>(
          this,
          Invocation.method(
            #login,
            [
              email,
              password,
              businessSlug,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i3.LoginResponse>>);

  @override
  _i4.Future<_i2.Result<_i5.User>> register({
    required String? email,
    required String? password,
    required String? firstName,
    required String? lastName,
    String? phone,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [],
          {
            #email: email,
            #password: password,
            #firstName: firstName,
            #lastName: lastName,
            #phone: phone,
          },
        ),
        returnValue:
            _i4.Future<_i2.Result<_i5.User>>.value(_FakeResult_0<_i5.User>(
          this,
          Invocation.method(
            #register,
            [],
            {
              #email: email,
              #password: password,
              #firstName: firstName,
              #lastName: lastName,
              #phone: phone,
            },
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.User>>);

  @override
  _i4.Future<_i2.Result<void>> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i4.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #logout,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<void>>);

  @override
  _i4.Future<_i2.Result<_i5.User>> getCurrentUser() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Result<_i5.User>>.value(_FakeResult_0<_i5.User>(
          this,
          Invocation.method(
            #getCurrentUser,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.User>>);

  @override
  _i4.Future<_i2.Result<void>> refreshToken() => (super.noSuchMethod(
        Invocation.method(
          #refreshToken,
          [],
        ),
        returnValue: _i4.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #refreshToken,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<void>>);

  @override
  _i4.Future<_i2.Result<void>> forgotPassword(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #forgotPassword,
          [email],
        ),
        returnValue: _i4.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #forgotPassword,
            [email],
          ),
        )),
      ) as _i4.Future<_i2.Result<void>>);

  @override
  _i4.Future<_i2.Result<void>> resetPassword({
    required String? token,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPassword,
          [],
          {
            #token: token,
            #newPassword: newPassword,
          },
        ),
        returnValue: _i4.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #resetPassword,
            [],
            {
              #token: token,
              #newPassword: newPassword,
            },
          ),
        )),
      ) as _i4.Future<_i2.Result<void>>);

  @override
  _i4.Future<_i2.Result<_i5.User>> updateProfile({
    String? firstName,
    String? lastName,
    String? phone,
    String? avatar,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [],
          {
            #firstName: firstName,
            #lastName: lastName,
            #phone: phone,
            #avatar: avatar,
          },
        ),
        returnValue:
            _i4.Future<_i2.Result<_i5.User>>.value(_FakeResult_0<_i5.User>(
          this,
          Invocation.method(
            #updateProfile,
            [],
            {
              #firstName: firstName,
              #lastName: lastName,
              #phone: phone,
              #avatar: avatar,
            },
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.User>>);

  @override
  _i4.Future<_i2.Result<void>> changePassword({
    required String? currentPassword,
    required String? newPassword,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #changePassword,
          [],
          {
            #currentPassword: currentPassword,
            #newPassword: newPassword,
          },
        ),
        returnValue: _i4.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #changePassword,
            [],
            {
              #currentPassword: currentPassword,
              #newPassword: newPassword,
            },
          ),
        )),
      ) as _i4.Future<_i2.Result<void>>);

  @override
  _i4.Future<void> clearStoredAuth() => (super.noSuchMethod(
        Invocation.method(
          #clearStoredAuth,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
